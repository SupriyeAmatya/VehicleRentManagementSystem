@model NiceApp.Models.DataModel.Vehicle

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<div>
    <h4>Vehicle</h4>
    <hr />
    <dl class="row">
        @*     <dt class = "col-sm-2">
        @Html.DisplayNameFor(model => model.Id)
        </dt>
        <dd class = "col-sm-10">
        @Html.DisplayFor(model => model.Id)
        </dd>*@
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.VehicleName)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.VehicleName)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.PlateNo)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.PlateNo)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.InitialRentPrice)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.InitialRentPrice)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.RentRatePerHr)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.RentRatePerHr)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Penalty)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Penalty)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Availability)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Availability)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.VehicleType)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.VehicleType)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.VehicleKind)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.VehicleKind)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.WhereStored)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.WhereStored)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Tracker)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Tracker)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Vehicleimages)
        </dt>
        <div class="col-9">
            <dd >
                <div id="carouselExampleControls" class="carousel slide carousel-fade carousel-dark " data-bs-ride="carousel">
                    <div class="carousel-inner">

                        @{
                            var isFirst = true;
                        }

                        @foreach (var image in Model.Vehicleimages)
                        {
                            if (isFirst)
                            {
                                <div class="carousel-item active" style="height:300px;" data-bs-interval="3000">
                                    <img class="img-fluid mw-100 mh-100" src="~/@image.VehicleImage1" class="d-block w-100" alt="@image.VehicleImage1" />
                                </div>
                            }
                            else
                            {
                                <div class="carousel-item" style="height:300px;" data-bs-interval="2000">
                                    <img class="img-fluid mw-100 mh-100" src="~/@image.VehicleImage1" class="d-block w-100" alt="@image.VehicleImage1">
                                </div>
                            }
                            isFirst = false;
                        }
                    </div>
                    <button class="carousel-control-prev" type="button" data-bs-target="#carouselExampleControls" data-bs-slide="prev">
                        <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                        <span class="visually-hidden">Previous</span>
                    </button>
                    <button class="carousel-control-next" type="button" data-bs-target="#carouselExampleControls" data-bs-slide="next">
                        <span class="carousel-control-next-icon" aria-hidden="true"></span>
                        <span class="visually-hidden">Next</span>
                    </button>
                </div>
        
       
        </dd>
        </div>
    </dl>
</div>
<div>
    @Html.ActionLink("Edit", "Edit", new { /* id = Model.PrimaryKey */ }) |
    <a asp-action="Index">Back to List</a>
</div>
